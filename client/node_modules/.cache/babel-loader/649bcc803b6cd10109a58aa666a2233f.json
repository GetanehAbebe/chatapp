{"ast":null,"code":"const {\n  io\n} = require('socket.io-client');\n\nconst {\n  SOCKET_REQUEST,\n  SOCKET_SUCCESS,\n  SOCKET_FAILURE\n} = require('./actions');\n\nconst setupSocket = () => {\n  const token = localStorage.getItem(\"token\");\n  return dispatch => {\n    if (token) {\n      const newSocket = io(\"http://localhost:5000\", {\n        query: {\n          token: localStorage.getItem(\"token\")\n        }\n      });\n      dispatch(connect(newSocket));\n      newSocket.on(\"disconnect\", () => {\n        setTimeout(setupSocket, 3000);\n      });\n    } else {\n      dispatch(failure('the socket must token to continue, please login to continue'));\n    }\n  };\n};\n\nexport const connect = socket => {\n  return {\n    type: SOCKET_SUCCESS,\n    payload: socket\n  };\n};\nexport const failure = err => {\n  return {\n    type: SOCKET_SUCCESS,\n    payload: err\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/redux/socket/actions.js"],"names":["io","require","SOCKET_REQUEST","SOCKET_SUCCESS","SOCKET_FAILURE","setupSocket","token","localStorage","getItem","dispatch","newSocket","query","connect","on","setTimeout","failure","socket","type","payload","err"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAASC,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA,cAAF;AACFC,EAAAA,cADE;AAEFC,EAAAA;AAFE,IAEiBH,OAAO,CAAC,WAAD,CAF9B;;AAMA,MAAMI,WAAW,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,SAAOC,QAAQ,IAAI;AACf,QAAIH,KAAJ,EAAW;AACP,YAAMI,SAAS,GAAGV,EAAE,CAAC,uBAAD,EAA0B;AAC1CW,QAAAA,KAAK,EAAE;AACHL,UAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADJ;AADmC,OAA1B,CAApB;AAKAC,MAAAA,QAAQ,CAACG,OAAO,CAACF,SAAD,CAAR,CAAR;AACAA,MAAAA,SAAS,CAACG,EAAV,CAAa,YAAb,EAA2B,MAAM;AAC7BC,QAAAA,UAAU,CAACT,WAAD,EAAc,IAAd,CAAV;AACH,OAFD;AAGH,KAVD,MAUO;AACHI,MAAAA,QAAQ,CAACM,OAAO,CAAC,6DAAD,CAAR,CAAR;AACH;AACJ,GAdD;AAeH,CAlBD;;AAoBA,OAAO,MAAMH,OAAO,GAAGI,MAAM,IAAI;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEd,cADH;AAEHe,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMD,OAAO,GAAGI,GAAG,IAAI;AAC1B,SAAO;AACHF,IAAAA,IAAI,EAAEd,cADH;AAEHe,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALM","sourcesContent":["const { io } = require('socket.io-client')\r\nconst { SOCKET_REQUEST,\r\n    SOCKET_SUCCESS,\r\n    SOCKET_FAILURE } = require('./actions')\r\n\r\n\r\n\r\nconst setupSocket = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    return dispatch => {\r\n        if (token) {\r\n            const newSocket = io(\"http://localhost:5000\", {\r\n                query: {\r\n                    token: localStorage.getItem(\"token\"),\r\n                },\r\n            });\r\n            dispatch(connect(newSocket))\r\n            newSocket.on(\"disconnect\", () => {\r\n                setTimeout(setupSocket, 3000);\r\n            });\r\n        } else {\r\n            dispatch(failure('the socket must token to continue, please login to continue'))\r\n        }\r\n    }\r\n};\r\n\r\nexport const connect = socket => {\r\n    return {\r\n        type: SOCKET_SUCCESS,\r\n        payload: socket\r\n    }\r\n}\r\nexport const failure = err => {\r\n    return {\r\n        type: SOCKET_SUCCESS,\r\n        payload: err\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}