{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter, useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login, signup } from '../redux/user/actions';\nimport Card from '../components/UIElemets/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = ({\n  setupSocket\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    user,\n    error,\n    loading\n  } = useSelector(state => state.user);\n  const [isLoginMode, setIsLoginMode] = useState(true); // const auth = useContext(AuthContext)\n\n  const [userDetails, setUseDetails] = useState({});\n  const history = useHistory();\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const hadleChange = e => {\n    setUseDetails({ ...userDetails,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    if (user) {\n      setupSocket();\n      history.push(\"/conversations\");\n    }\n  }, []);\n  useEffect(() => {\n    if (user) {\n      history.push(\"/conversations\");\n    } else {\n      setErrorMessage(error);\n    }\n  }, [user, error, loading]);\n\n  const loginUser = async e => {\n    console.log('user', e);\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = userDetails;\n\n    if (isLoginMode) {\n      dispatch(login(email, password)); // const result = await login(userDetails.email, userDetails.password)\n      // if (!result.message) {\n      //     localStorage.setItem(\"CC_Token\", result.token);\n      //     localStorage.setItem(\"userId\", result._id);\n      //     localStorage.setItem(\"userName\", result.firstName);\n      //     auth.login()\n      //     history.push(\"/dashboard\");\n      // } else {\n      //     setErrorMessage(result.message)\n      // }\n    } else {\n      dispatch(signup(userDetails)); // const result = await signUp({ ...userDetails })\n      // if (!result.message) {\n      //     setIsLoginMode(true)\n      // } else {\n      //     setErrorMessage(result.message)\n      // }\n    }\n  };\n\n  const switchModehandler = () => {\n    setIsLoginMode(!isLoginMode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLoginMode ? 'Login' : 'Sign-Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 30\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), \"(\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"abc@example.com\",\n          onChange: hadleChange,\n          value: userDetails.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"123gggewr\",\n          onChange: hadleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this), \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn--white\",\n      children: isLoginMode ? 'Login' : 'Sign-Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      inverse: true,\n      onClick: switchModehandler,\n      children: [\"Switch to \", !isLoginMode ? 'Login' : 'Sign-Up']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"9LWwUzxM7PCRL5tu5RgZeNsvRVg=\", false, function () {\n  return [useDispatch, useSelector, useHistory];\n});\n\n_c = LoginPage;\nexport default _c2 = withRouter(LoginPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/LoginPage.jsx"],"names":["React","useState","useEffect","withRouter","useHistory","useSelector","useDispatch","login","signup","Card","LoginPage","setupSocket","dispatch","user","error","loading","state","isLoginMode","setIsLoginMode","userDetails","setUseDetails","history","errorMessage","setErrorMessage","hadleChange","e","target","id","value","push","loginUser","console","log","preventDefault","email","password","switchModehandler"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { withRouter, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login, signup } from '../redux/user/actions'\r\nimport Card from '../components/UIElemets/Card';\r\nconst LoginPage = ({ setupSocket }) => {\r\n    const dispatch = useDispatch()\r\n    const { user, error, loading } = useSelector(state => state.user)\r\n    const [isLoginMode, setIsLoginMode] = useState(true)   // const auth = useContext(AuthContext)\r\n    const [userDetails, setUseDetails] = useState({})\r\n    const history = useHistory()\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n\r\n    const hadleChange = (e) => {\r\n        setUseDetails({ ...userDetails, [e.target.id]: e.target.value })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setupSocket()\r\n            history.push(\"/conversations\");\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        if (user) {\r\n            history.push(\"/conversations\");\r\n        } else {\r\n            setErrorMessage(error)\r\n        }\r\n    }, [user, error, loading])\r\n    const loginUser = async (e) => {\r\n        console.log('user', e)\r\n        e.preventDefault()\r\n        const { email, password } = userDetails\r\n        if (isLoginMode) {\r\n            dispatch(login(email, password))\r\n\r\n\r\n            // const result = await login(userDetails.email, userDetails.password)\r\n            // if (!result.message) {\r\n            //     localStorage.setItem(\"CC_Token\", result.token);\r\n            //     localStorage.setItem(\"userId\", result._id);\r\n            //     localStorage.setItem(\"userName\", result.firstName);\r\n            //     auth.login()\r\n            //     history.push(\"/dashboard\");\r\n            // } else {\r\n            //     setErrorMessage(result.message)\r\n            // }\r\n        } else {\r\n            dispatch(signup(userDetails))\r\n            // const result = await signUp({ ...userDetails })\r\n            // if (!result.message) {\r\n            //     setIsLoginMode(true)\r\n            // } else {\r\n            //     setErrorMessage(result.message)\r\n            // }\r\n\r\n\r\n        }\r\n    };\r\n    const switchModehandler = () => {\r\n        setIsLoginMode(!isLoginMode)\r\n    }\r\n\r\n    return (\r\n        <Card >\r\n            <h2 >{isLoginMode ? 'Login' : 'Sign-Up'}</h2>\r\n            {errorMessage && <p>{errorMessage}</p>}\r\n            {loading && <p>loading</p>}\r\n            <hr />\r\n            (<form onSubmit={loginUser}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"abc@example.com\"\r\n                        onChange={hadleChange}\r\n                        value={userDetails.email}\r\n                    />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"123gggewr\"\r\n                        onChange={hadleChange}\r\n                    />\r\n                </div>\r\n            </form>)\r\n                <button type=\"submit\" className='btn btn--white' >{isLoginMode ? 'Login' : 'Sign-Up'}</button>\r\n            <button inverse onClick={switchModehandler}>Switch to {!isLoginMode ? 'Login' : 'Sign-Up'}</button>\r\n        </Card>\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}