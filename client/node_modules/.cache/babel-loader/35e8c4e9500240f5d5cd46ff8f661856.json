{"ast":null,"code":"const axios = require('axios');\n\nconst {\n  FETCH_CONTACTS_REQUEST,\n  FETCH_CONTACTS_SUCCESS,\n  FETCH_CONTACTS_FAILURE\n} = require('./types');\n\nconst {\n  users\n} = use;\nexport const fetchUsers = () => {\n  const userId = localStorage.getItem('userId');\n  return dispatch => {\n    dispatch(fetchUsersRequest());\n    axios.post('http://localhost:5000/api/contact', {\n      userId\n    }).then(response => {\n      const users = response.data;\n      const contacts = {};\n      users.forEach(item => {\n        contacts[item.userId] = item.name;\n      });\n      console.log('new users', contacts);\n      dispatch(fetchUsersSuccess(response.data));\n    }).catch(error => {\n      dispatch(fetchUsersFailure(error.message));\n    });\n  };\n};\nexport const appendToContacts = (name, id) => {};\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_CONTACTS_REQUEST\n  };\n};\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_CONTACTS_SUCCESS,\n    payload: users\n  };\n};\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_CONTACTS_FAILURE,\n    payload: error\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/redux/contacts/actions.js"],"names":["axios","require","FETCH_CONTACTS_REQUEST","FETCH_CONTACTS_SUCCESS","FETCH_CONTACTS_FAILURE","users","use","fetchUsers","userId","localStorage","getItem","dispatch","fetchUsersRequest","post","then","response","data","contacts","forEach","item","name","console","log","fetchUsersSuccess","catch","error","fetchUsersFailure","message","appendToContacts","id","type","payload"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAM;AAAEC,EAAAA,sBAAF;AAA0BC,EAAAA,sBAA1B;AAAkDC,EAAAA;AAAlD,IAA6EH,OAAO,CAAC,SAAD,CAA1F;;AACA,MAAM;AAACI,EAAAA;AAAD,IAASC,GAAf;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC5B,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAf;AACA,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAZ,IAAAA,KAAK,CAACa,IAAN,CAAW,mCAAX,EAAgD;AAAEL,MAAAA;AAAF,KAAhD,EAA4DM,IAA5D,CAAiEC,QAAQ,IAAI;AACzE,YAAMV,KAAK,GAAGU,QAAQ,CAACC,IAAvB;AACA,YAAMC,QAAQ,GAAG,EAAjB;AACAZ,MAAAA,KAAK,CAACa,OAAN,CAAcC,IAAI,IAAI;AAClBF,QAAAA,QAAQ,CAACE,IAAI,CAACX,MAAN,CAAR,GAAwBW,IAAI,CAACC,IAA7B;AACH,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,QAAzB;AACAN,MAAAA,QAAQ,CAACY,iBAAiB,CAACR,QAAQ,CAACC,IAAV,CAAlB,CAAR;AACH,KARD,EAQGQ,KARH,CAQSC,KAAK,IAAI;AACdd,MAAAA,QAAQ,CAACe,iBAAiB,CAACD,KAAK,CAACE,OAAP,CAAlB,CAAR;AACH,KAVD;AAWH,GAbD;AAcH,CAhBM;AAmBP,OAAO,MAAMC,gBAAgB,GAAC,CAACR,IAAD,EAAMS,EAAN,KAAW,CAExC,CAFM;AAGP,OAAO,MAAMjB,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHkB,IAAAA,IAAI,EAAE5B;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMqB,iBAAiB,GAAGlB,KAAK,IAAI;AACtC,SAAO;AACHyB,IAAAA,IAAI,EAAE3B,sBADH;AAEH4B,IAAAA,OAAO,EAAE1B;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMqB,iBAAiB,GAAGD,KAAK,IAAI;AACtC,SAAO;AACHK,IAAAA,IAAI,EAAE1B,sBADH;AAEH2B,IAAAA,OAAO,EAAEN;AAFN,GAAP;AAIH,CALM","sourcesContent":["const axios = require('axios')\r\nconst { FETCH_CONTACTS_REQUEST, FETCH_CONTACTS_SUCCESS, FETCH_CONTACTS_FAILURE } = require('./types')\r\nconst {users} =use\r\nexport const fetchUsers = () => {\r\n    const userId = localStorage.getItem('userId')\r\n    return (dispatch) => {\r\n        dispatch(fetchUsersRequest())\r\n        axios.post('http://localhost:5000/api/contact', { userId }).then(response => {\r\n            const users = response.data\r\n            const contacts = {}\r\n            users.forEach(item => {\r\n                contacts[item.userId] = item.name\r\n            })\r\n            console.log('new users', contacts)\r\n            dispatch(fetchUsersSuccess(response.data))\r\n        }).catch(error => {\r\n            dispatch(fetchUsersFailure(error.message))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const appendToContacts=(name,id)=>{\r\n    \r\n}\r\nexport const fetchUsersRequest = () => {\r\n    return {\r\n        type: FETCH_CONTACTS_REQUEST\r\n    }\r\n}\r\n\r\nexport const fetchUsersSuccess = users => {\r\n    return {\r\n        type: FETCH_CONTACTS_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const fetchUsersFailure = error => {\r\n    return {\r\n        type: FETCH_CONTACTS_FAILURE,\r\n        payload: error\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}