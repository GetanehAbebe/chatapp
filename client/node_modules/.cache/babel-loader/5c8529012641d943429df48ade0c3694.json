{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\DashboardPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { allConversations, getRoomChat } from '../redux/conversations/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  addConversation,\n  getUserConversations\n} = require('../DAL/index');\n\nconst DashboardPage = props => {\n  _s();\n\n  const {\n    conversations\n  } = useSelector(state => state.conversations);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  useEffect(() => {\n    dispatch(allConversations());\n  }, []);\n\n  const joinToRoom = roomId => {\n    dispatch(getRoomChat(roomId));\n    history.push('/chatroom');\n  };\n\n  useEffect(async () => {\n    const userId = localStorage.getItem('userId');\n    const conversations = await getUserConversations(userId);\n    setChatrooms(conversations);\n  }, []);\n\n  const addChatroom = async () => {\n    const result = await addConversation(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardHeader\",\n      children: \"Chatrooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardBody\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chatroomName\",\n          children: \"Chatroom Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"chatroomName\",\n          id: \"chatroomName\",\n          className: \"input\",\n          onChange: e => setName(e.target.value),\n          placeholder: \"ChatterBox Nepal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addChatroom,\n      className: \"heading-secondary\",\n      children: \"Create Chatroom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatrooms\",\n      children: conversations && conversations.map(chatroom => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"heading-tertiary card__heading-span\",\n            children: chatroom.name || chatroom._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \" btn btn--green\",\n            onClick: () => joinToRoom(chatroom._id),\n            children: \"Join\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)\n      }, chatroom._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DashboardPage, \"E42KGgC1IuiBAe3h6Zdxr7ydOBw=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/DashboardPage.jsx"],"names":["React","useEffect","useState","axios","Link","useHistory","connect","useSelector","useDispatch","allConversations","getRoomChat","addConversation","getUserConversations","require","DashboardPage","props","conversations","state","history","dispatch","name","setName","joinToRoom","roomId","push","userId","localStorage","getItem","setChatrooms","addChatroom","result","e","target","value","map","chatroom","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { allConversations, getRoomChat } from '../redux/conversations/actions'\r\nconst { addConversation, getUserConversations } = require('../DAL/index')\r\nconst DashboardPage = (props) => {\r\n    const { conversations } = useSelector(state => state.conversations)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    useEffect(() => {\r\n        dispatch(allConversations())\r\n    }, [])\r\n\r\n\r\n    const joinToRoom = (roomId) => {\r\n        dispatch(getRoomChat(roomId))\r\n        history.push('/chatroom')\r\n    }\r\n    useEffect(async () => {\r\n        const userId = localStorage.getItem('userId')\r\n        const conversations = await getUserConversations(userId)\r\n        setChatrooms(conversations)\r\n    }, []);\r\n\r\n\r\n    const addChatroom = async () => {\r\n        const result = await addConversation(name);\r\n    }\r\n    return (\r\n        <div >\r\n            <div className=\"cardHeader\">Chatrooms</div>\r\n            <div className=\"cardBody\">\r\n                <div className=\"inputGroup\">\r\n                    <label htmlFor=\"chatroomName\">Chatroom Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"chatroomName\"\r\n                        id=\"chatroomName\"\r\n                        className=\"input\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"ChatterBox Nepal\"\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n            <button onClick={addChatroom} className=\"heading-secondary\">Create Chatroom</button>\r\n            <div className=\"chatrooms\">\r\n                {conversations && conversations.map((chatroom) => (\r\n                    <div key={chatroom._id} >\r\n                        <div className=\"d-flex center\">\r\n                            <h4 className=\"heading-tertiary card__heading-span\">{chatroom.name || chatroom._id}</h4>\r\n                            <button className=\" btn btn--green\" onClick={() => joinToRoom(chatroom._id)}>Join</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DashboardPage"]},"metadata":{},"sourceType":"module"}