{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\GroupPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Card from '../components/UIElemets/Card';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { addConversation } from '../DAL/index';\nimport { fetchUsers } from '../redux/contacts/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GroupPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [selectedValues, setSelectedValues] = useState(true);\n  const [name, setName] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n  const userId = localStorage.getItem('userId');\n  const userName = localStorage.getItem('userName');\n  const {\n    users\n  } = useSelector(state => state.contacts);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await addConversation(name, [...selectedValues, {\n      name: userName,\n      userId\n    }], userId);\n\n    if (!result.message) {\n      history.push(`/chatroom`);\n    }\n  };\n\n  useEffect(() => {\n    if (users.length || !users) dispatch(fetch);\n  }, []);\n\n  const hadleChange = e => {\n    setName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\",\n          placeholder: \"sport room\",\n          onChange: hadleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n        options: users,\n        selectedValue: users,\n        onSelect: data => {\n          setSelectedValues(data);\n        },\n        onRemove: data => {\n          setSelectedValues(data);\n        },\n        displayValue: 'name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GroupPage, \"T4ZeNxGHDX9FsIU+w525k7NyA0Y=\", true, function () {\n  return [useHistory, useSelector];\n});\n\n_c = GroupPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/GroupPage.jsx"],"names":["React","useState","useEffect","Multiselect","Card","useHistory","useSelector","addConversation","fetchUsers","GroupPage","dispatch","useDispatch","selectedValues","setSelectedValues","name","setName","errorMessage","setErrorMessage","history","userId","localStorage","getItem","userName","users","state","contacts","handleSubmit","e","preventDefault","result","message","push","length","fetch","hadleChange","target","value","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Card from '../components/UIElemets/Card'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux';\r\nimport { addConversation } from '../DAL/index'\r\nimport { fetchUsers } from '../redux/contacts/actions'\r\nexport default function GroupPage() {\r\n    const dispatch = useDispatch()\r\n    const [selectedValues, setSelectedValues] = useState(true)\r\n    const [name, setName] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const history = useHistory()\r\n    const userId = localStorage.getItem('userId')\r\n    const userName = localStorage.getItem('userName')\r\n    const { users } = useSelector(state => state.contacts)\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const result = await addConversation(name, [...selectedValues, { name: userName, userId }], userId)\r\n        if (!result.message) {\r\n            history.push(`/chatroom`)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if(users.length || !users) dispatch(fetch)\r\n    }, []\r\n\r\n    )\r\n    const hadleChange = (e) => {\r\n        setName(e.target.value)\r\n    }\r\n    return (\r\n        <Card>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"name\">group Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        placeholder=\"sport room\"\r\n                        onChange={hadleChange}\r\n                    />\r\n                </div>\r\n                <Multiselect options={users}\r\n                    selectedValue={users}\r\n                    onSelect={(data) => { setSelectedValues(data) }}\r\n                    onRemove={(data) => { setSelectedValues(data) }}\r\n                    displayValue={'name'}\r\n                />\r\n                <button type=\"submit\" >Create</button>\r\n            </form>\r\n        </Card >\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}