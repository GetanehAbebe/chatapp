{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\DashboardPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { allConversations, getRoomChat } from '../redux/conversations/actions';\nimport { fetchUsers } from '../redux/contacts/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  addConversation,\n  getUserConversations\n} = require('../DAL/index');\n\nconst DashboardPage = props => {\n  _s();\n\n  const {\n    conversations\n  } = useSelector(state => state.conversations);\n  const {\n    users\n  } = useSelector(state => state.conversations);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [show, setShow] = useState(false);\n  const [selectedContacts, setSelectedContacts] = useState([]);\n  useEffect(() => {\n    dispatch(allConversations());\n  }, []);\n\n  const joinToRoom = roomId => {\n    dispatch(getRoomChat(roomId));\n    history.push('/newcontact');\n  };\n\n  useEffect(() => {\n    if (!users) dispatch(fetchUsers());\n  }, []);\n\n  const addChatroom = async () => {\n    const result = await addConversation(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading-secondary\",\n      children: \"Chatrooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#popup\",\n        className: \"btn\",\n        children: \"add conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversations && conversations.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: item.cName || 'nav-list',\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => joinToRoom(item._id),\n          children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DashboardPage, \"vzAQvVHY65rmW89I1c+PWeoaVDY=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/DashboardPage.jsx"],"names":["React","useEffect","useState","axios","Multiselect","Link","useHistory","connect","useSelector","useDispatch","allConversations","getRoomChat","fetchUsers","addConversation","getUserConversations","require","DashboardPage","props","conversations","state","users","history","dispatch","name","setName","show","setShow","selectedContacts","setSelectedContacts","joinToRoom","roomId","push","addChatroom","result","map","item","index","cName","_id","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gCAA9C;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;AACA,MAAM;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,IAA4CC,OAAO,CAAC,cAAD,CAAzD;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAoBV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAArC;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAYZ,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAA7B;AAEA,QAAMG,OAAO,GAAGf,UAAU,EAA1B;AACA,QAAMgB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACyB,gBAAD,EAAmBC,mBAAnB,IAA0C1B,QAAQ,CAAC,EAAD,CAAxD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZqB,IAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMmB,UAAU,GAAIC,MAAD,IAAY;AAC3BR,IAAAA,QAAQ,CAACX,WAAW,CAACmB,MAAD,CAAZ,CAAR;AACAT,IAAAA,OAAO,CAACU,IAAR,CAAa,aAAb;AACH,GAHD;;AAKA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACmB,KAAL,EAAYE,QAAQ,CAACV,UAAU,EAAX,CAAR;AACf,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMoB,WAAW,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMpB,eAAe,CAACU,IAAD,CAApC;AACH,GAFD;;AAGA,sBAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACI;AAAG,QAAA,IAAI,EAAC,QAAR;AAAiB,QAAA,SAAS,EAAC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,gBACKL,aAAa,IAAIA,aAAa,CAACgB,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAChC;AAAgB,QAAA,SAAS,EAAED,IAAI,CAACE,KAAL,IAAc,UAAzC;AAAA,+BACI;AAAG,UAAA,OAAO,EAAE,MAAMR,UAAU,CAACM,IAAI,CAACG,GAAN,CAA5B;AAAA,qBACKH,IAAI,CAACI,IADV,eAEI;AAAA,sBAAOJ,IAAI,CAACZ;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASa,KAAT;AAAA;AAAA;AAAA;AAAA,cADc;AADtB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAuBH,CA/CD;;GAAMpB,a;UACwBR,W,EACRA,W,EAEFF,U,EACCG,W;;;KALfO,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { allConversations, getRoomChat } from '../redux/conversations/actions'\r\nimport { fetchUsers } from '../redux/contacts/actions'\r\nconst { addConversation, getUserConversations } = require('../DAL/index')\r\nconst DashboardPage = (props) => {\r\n    const { conversations } = useSelector(state => state.conversations)\r\n    const { users } = useSelector(state => state.conversations)\r\n\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    const [show, setShow] = useState(false)\r\n    const [selectedContacts, setSelectedContacts] = useState([])\r\n    useEffect(() => {\r\n        dispatch(allConversations())\r\n    }, [])\r\n\r\n    const joinToRoom = (roomId) => {\r\n        dispatch(getRoomChat(roomId))\r\n        history.push('/newcontact')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!users) dispatch(fetchUsers())\r\n    }, [])\r\n    const addChatroom = async () => {\r\n        const result = await addConversation(name);\r\n    }\r\n    return (\r\n\r\n        <div className=\"text-center\">\r\n            <div className=\"heading-secondary\">Chatrooms</div>\r\n            <div>\r\n                <a href=\"#popup\" className=\"btn\">add conversation</a>\r\n            </div>\r\n\r\n            <div >\r\n                {conversations && conversations.map((item, index) => (\r\n                    <li key={index} className={item.cName || 'nav-list'}>\r\n                        <p onClick={() => joinToRoom(item._id)} >\r\n                            {item.icon}\r\n                            <span>{item.name}</span>\r\n                        </p>\r\n                    </li>\r\n\r\n                ))}\r\n            </div>\r\n            \r\n        </div >\r\n\r\n    );\r\n};\r\nexport default DashboardPage"]},"metadata":{},"sourceType":"module"}