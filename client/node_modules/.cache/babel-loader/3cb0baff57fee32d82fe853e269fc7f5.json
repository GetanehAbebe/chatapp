{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\DashboardPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { allConversations, getRoomChat } from '../redux/conversations/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  addConversation,\n  getUserConversations\n} = require('../DAL/index');\n\nconst DashboardPage = props => {\n  _s();\n\n  const {\n    conversations\n  } = useSelector(state => state.conversations);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  useEffect(() => {\n    dispatch(allConversations());\n  }, []);\n\n  const joinToRoom = roomId => {\n    dispatch(getRoomChat(roomId));\n    history.push('/newcontact');\n  };\n\n  const addChatroom = async () => {\n    const result = await addConversation(name);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardHeader\",\n      children: \"Chatrooms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chatroomName\",\n          children: \"Chatroom Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"chatroomName\",\n          id: \"chatroomName\",\n          className: \"input\",\n          onChange: e => setName(e.target.value),\n          placeholder: \"ChatterBox Nepal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addChatroom,\n        className: \"heading-secondary\",\n        children: \"Create Chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: conversations && conversations.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: item.cName || 'nav-list',\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => joinToRoom(item._id),\n          children: [item.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DashboardPage, \"v4NRDRR7Ty7AJxTt9hmDuF79vZc=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = DashboardPage;\nexport default DashboardPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/DashboardPage.jsx"],"names":["React","useEffect","useState","axios","Link","useHistory","connect","useSelector","useDispatch","allConversations","getRoomChat","addConversation","getUserConversations","require","DashboardPage","props","conversations","state","history","dispatch","name","setName","joinToRoom","roomId","push","addChatroom","result","e","target","value","map","item","index","cName","_id","icon"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,gBAAT,EAA2BC,WAA3B,QAA8C,gCAA9C;;;AACA,MAAM;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,IAA4CC,OAAO,CAAC,cAAD,CAAzD;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAoBT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAArC;AACA,QAAME,OAAO,GAAGb,UAAU,EAA1B;AACA,QAAMc,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZkB,IAAAA,QAAQ,CAACV,gBAAgB,EAAjB,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMa,UAAU,GAAIC,MAAD,IAAY;AAC3BJ,IAAAA,QAAQ,CAACT,WAAW,CAACa,MAAD,CAAZ,CAAR;AACAL,IAAAA,OAAO,CAACM,IAAR,CAAa,aAAb;AACH,GAHD;;AAMA,QAAMC,WAAW,GAAG,YAAY;AAC5B,UAAMC,MAAM,GAAG,MAAMf,eAAe,CAACS,IAAD,CAApC;AACH,GAFD;;AAGA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,cAFT;AAGI,UAAA,EAAE,EAAC,cAHP;AAII,UAAA,SAAS,EAAC,OAJd;AAKI,UAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAMI,UAAA,WAAW,EAAC;AANhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAQ,QAAA,OAAO,EAAEJ,WAAjB;AAA8B,QAAA,SAAS,EAAC,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAgBI;AAAA,gBAEKT,aAAa,IAAIA,aAAa,CAACc,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBAChC;AAAgB,QAAA,SAAS,EAAED,IAAI,CAACE,KAAL,IAAc,UAAzC;AAAA,+BACI;AAAG,UAAA,OAAO,EAAE,MAAMX,UAAU,CAACS,IAAI,CAACG,GAAN,CAA5B;AAAA,qBACKH,IAAI,CAACI,IADV,eAEI;AAAA,sBAAOJ,IAAI,CAACX;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAASY,KAAT;AAAA;AAAA;AAAA;AAAA,cADc;AAFtB;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAjDD;;GAAMlB,a;UACwBP,W,EACVF,U,EACCG,W;;;KAHfM,a;AAkDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { allConversations, getRoomChat } from '../redux/conversations/actions'\r\nconst { addConversation, getUserConversations } = require('../DAL/index')\r\nconst DashboardPage = (props) => {\r\n    const { conversations } = useSelector(state => state.conversations)\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('')\r\n    useEffect(() => {\r\n        dispatch(allConversations())\r\n    }, [])\r\n\r\n    const joinToRoom = (roomId) => {\r\n        dispatch(getRoomChat(roomId))\r\n        history.push('/newcontact')\r\n    }\r\n\r\n\r\n    const addChatroom = async () => {\r\n        const result = await addConversation(name);\r\n    }\r\n    return (\r\n        <div >\r\n            <div className=\"cardHeader\">Chatrooms</div>\r\n            <div className=\"cardBody\">\r\n                <div className=\"inputGroup\">\r\n                    <label htmlFor=\"chatroomName\">Chatroom Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"chatroomName\"\r\n                        id=\"chatroomName\"\r\n                        className=\"input\"\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"ChatterBox Nepal\"\r\n                    />\r\n                </div>\r\n                <button onClick={addChatroom} className=\"heading-secondary\">Create Chatroom</button>\r\n            </div>\r\n            <div >\r\n                {}\r\n                {conversations && conversations.map((item, index) => (\r\n                    <li key={index} className={item.cName || 'nav-list'}>\r\n                        <p onClick={() => joinToRoom(item._id)} >\r\n                            {item.icon}\r\n                            <span>{item.name}</span>\r\n                        </p>\r\n                    </li>\r\n                   \r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default DashboardPage"]},"metadata":{},"sourceType":"module"}