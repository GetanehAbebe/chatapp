{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\chat\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react'; // import { SendOutlined, PictureOutlined } from '@ant-design/icons';\n\nimport { useSelector, use } from 'react-redux';\nimport axios from 'axios';\nimport { io } from \"socket.io-client\";\n\nconst isTyping = () => {};\n\nimport { afterPostMessage } from '../../redux/conversations/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MessageForm = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  localStorage.debug = '*';\n  const socket = io('http://localhost:5000');\n  const [value, setValue] = useState('');\n  const {\n    chatId,\n    creds\n  } = props;\n  const {\n    currentRoom\n  } = useSelector(state => state.conversations);\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    isTyping(props, chatId);\n  };\n\n  console.log('socket', socket);\n  useEffect(() => {\n    socket.emit('joinRoom', {\n      userId: 'fff'\n    });\n    return () => {};\n  }, []);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const chatMessage = {\n      chatroomId: currentRoom,\n      message: {\n        userId: localStorage.getItem('userId'),\n        content: value,\n        date: Date.now()\n      },\n      userId: localStorage.getItem('userId')\n    };\n\n    if (socket) {\n      socket.emit(\"chatroomMessage\", chatMessage);\n      setValue(\"\");\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: sendMessage,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageForm, \"zCNoYSKjuyC90dlul0QAQ94/P5Q=\", true, function () {\n  return [useSelector];\n});\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/chat/MessageForm.jsx"],"names":["useState","useEffect","useSelector","use","axios","io","isTyping","afterPostMessage","MessageForm","props","dispatch","useDispatch","localStorage","debug","socket","value","setValue","chatId","creds","currentRoom","state","conversations","handleChange","event","target","console","log","emit","userId","sendMessage","e","preventDefault","chatMessage","chatroomId","message","getItem","content","date","Date","now","handleSubmit","text","trim","length","handleUpload","files","display"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\r\n// import { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { useSelector,use } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport { io } from \"socket.io-client\";\r\nconst isTyping = () => { }\r\nimport { afterPostMessage } from '../../redux/conversations/actions'\r\nconst MessageForm = (props) => {\r\n    const dispatch = useDispatch()\r\n    localStorage.debug = '*';\r\n    const socket = io('http://localhost:5000')\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n    const { currentRoom } = useSelector(state => state.conversations)\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        isTyping(props, chatId);\r\n    };\r\n\r\n    console.log('socket', socket)\r\n\r\n    useEffect(() => {\r\n        socket.emit('joinRoom', { userId: 'fff' })\r\n        return () => {\r\n\r\n        }\r\n    }, [])\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        const chatMessage = {\r\n            chatroomId: currentRoom,\r\n            message: { userId: localStorage.getItem('userId'), content: value, date: Date.now() },\r\n            userId: localStorage.getItem('userId')\r\n        }\r\n\r\n        if (socket) {\r\n            socket.emit(\"chatroomMessage\", chatMessage);\r\n            setValue(\"\");\r\n        }\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n        }\r\n\r\n        setValue('');\r\n    };\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    };\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={sendMessage}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    picture\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                send\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}