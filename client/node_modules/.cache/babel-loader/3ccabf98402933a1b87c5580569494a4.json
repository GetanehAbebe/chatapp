{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from '../redux/contacts/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    users\n  } = useSelector(state => state.contacts);\n  useEffect(() => {\n    if (!users.length) dispatch(fetchUsers());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users && users.map((user, i) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: user.cName || 'nav-list',\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [user.icon, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Contacts, \"tbZ6KJdmADm7ZyMUg0L8SjVwHkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/Contacts.jsx"],"names":["useEffect","useState","useSelector","useDispatch","fetchUsers","Contacts","dispatch","users","state","contacts","length","map","user","i","cName","icon","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,2BAA3B;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAYL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA7B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACO,KAAK,CAACG,MAAX,EAAmBJ,QAAQ,CAACF,UAAU,EAAX,CAAR;AACtB,GAFQ,EAEN,EAFM,CAAT;AAGA,sBAAO;AAAA,cAGCG,KAAK,IAAIA,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,0BAAO;AAAY,QAAA,SAAS,EAAED,IAAI,CAACE,KAAL,IAAc,UAArC;AAAA,+BACH;AAAA,qBACKF,IAAI,CAACG,IADV,eAEI;AAAA,sBAAOH,IAAI,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,SAASH,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AAMH,KAPQ;AAHV,mBAAP;AAeH,CArBD;;GAAMR,Q;UACeF,W,EACCD,W;;;KAFhBG,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { fetchUsers } from '../redux/contacts/actions'\r\nconst Contacts = () => {\r\n    const dispatch = useDispatch()\r\n    const { users } = useSelector(state => state.contacts)\r\n    useEffect(() => {\r\n        if (!users.length) dispatch(fetchUsers())\r\n    }, [])\r\n    return <>\r\n    \r\n        {\r\n            users && users.map((user, i) => {\r\n                return <li key={i} className={user.cName || 'nav-list'}>\r\n                    <p>\r\n                        {user.icon}\r\n                        <span>{user.name}</span>\r\n                    </p>\r\n                </li>\r\n            })\r\n\r\n        }\r\n    </>\r\n\r\n}\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}