{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Contacts = () => {\n  _s();\n\n  const {\n    users\n  } = useSelector(state => state.contacts);\n  useEffect(() => {\n    if (!users.length) fetchUsers;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: users && users.map((user, i) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", user.name, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false);\n};\n\n_s(Contacts, \"4mhhxVwtrrjR066pKbcnb8X0Gkw=\", false, function () {\n  return [useSelector];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/Contacts.jsx"],"names":["useEffect","useState","useSelector","Contacts","users","state","contacts","length","fetchUsers","map","user","i","name"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAYF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAA7B;AACAN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACI,KAAK,CAACG,MAAV,EAAkBC,UAAU;AAC/B,GAFQ,EAEP,EAFO,CAAT;AAGA,sBAAO;AAAA,cAECJ,KAAK,IAAIA,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC5B,0BAAO;AAAA,wBAAeD,IAAI,CAACE,IAApB;AAAA,SAASD,CAAT;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFQ;AAFV,mBAAP;AAQH,CAbD;;GAAMR,Q;UACgBD,W;;;KADhBC,Q;AAcN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { useSelector } from 'react-redux'\r\nconst Contacts = () => {\r\n    const { users } = useSelector(state => state.contacts)\r\n    useEffect(()=>{\r\n        if(!users.length) fetchUsers\r\n    },[])\r\n    return <>\r\n        {\r\n            users && users.map((user, i) => {\r\n                return <li key={i} > {user.name} </li>\r\n            })\r\n        }\r\n    </>\r\n\r\n}\r\nexport default Contacts"]},"metadata":{},"sourceType":"module"}