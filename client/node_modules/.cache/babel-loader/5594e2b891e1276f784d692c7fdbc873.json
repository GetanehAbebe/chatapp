{"ast":null,"code":"const {\n  io\n} = require('socket.io-client');\n\nconst {\n  SOCKET_REQUEST,\n  SOCKET_SUCCESS,\n  SOCKET_FAILURE\n} = require('./actions');\n\nconst initialState = {\n  socket: io(\"http://localhost:5000\", {\n    query: {\n      token: localStorage.getItem(\"token\")\n    }\n  }),\n  error: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SOCKET_SUCCESS:\n      return {\n        socket: action.payload,\n        error: ''\n      };\n\n    case SOCKET_FAILURE:\n      return {\n        socket: '',\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nmodule.exports = reducer;","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/redux/socket/reducer.js"],"names":["io","require","SOCKET_REQUEST","SOCKET_SUCCESS","SOCKET_FAILURE","initialState","socket","query","token","localStorage","getItem","error","reducer","state","action","type","payload","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAASC,OAAO,CAAC,kBAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA,cAAF;AACFC,EAAAA,cADE;AAEFC,EAAAA;AAFE,IAEiBH,OAAO,CAAC,WAAD,CAF9B;;AAKA,MAAMI,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAEN,EAAE,CAAC,uBAAD,EAA0B;AAChCO,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADJ;AADyB,GAA1B,CADO;AAMjBC,EAAAA,KAAK,EAAE;AANU,CAArB;;AASA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKZ,cAAL;AACI,aAAO;AACHG,QAAAA,MAAM,EAAEQ,MAAM,CAACE,OADZ;AAEHL,QAAAA,KAAK,EAAE;AAFJ,OAAP;;AAIJ,SAAKP,cAAL;AACI,aAAO;AACHE,QAAAA,MAAM,EAAE,EADL;AAEHK,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFX,OAAP;;AAKJ;AAAS,aAAOH,KAAP;AAbb;AAeH,CAhBD;;AAkBAI,MAAM,CAACC,OAAP,GAAiBN,OAAjB","sourcesContent":["const { io } = require('socket.io-client')\r\nconst { SOCKET_REQUEST,\r\n    SOCKET_SUCCESS,\r\n    SOCKET_FAILURE } = require('./actions')\r\n\r\n\r\nconst initialState = {\r\n    socket: io(\"http://localhost:5000\", {\r\n        query: {\r\n            token: localStorage.getItem(\"token\"),\r\n        },\r\n    }),\r\n    error: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case SOCKET_SUCCESS:\r\n            return {\r\n                socket: action.payload,\r\n                error: ''\r\n            }\r\n        case SOCKET_FAILURE:\r\n            return {\r\n                socket: '',\r\n                error: action.payload\r\n            }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nmodule.exports = reducer\r\n"]},"metadata":{},"sourceType":"module"}