{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\chat\\\\MessageForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; // import { SendOutlined, PictureOutlined } from '@ant-design/icons';\n\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst io = require('socket.io-client').connect;\n\nconst isTyping = () => {};\n\nconst MessageForm = props => {\n  _s();\n\n  const [value, setValue] = useState('');\n  const {\n    chatId,\n    creds\n  } = props;\n  const {\n    currentRoom\n  } = useSelector(state => state.conversations);\n  const socket = io.connect(\"http://localhost:5000\", {\n    rejectUnauthorized: false\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n    socket.emit('typing', {\n      name: 'getaneh'\n    });\n    isTyping(props, chatId);\n  };\n\n  const sendMessage = e => {\n    e.preventDefault();\n    const chatMessage = {\n      chatroomId: currentRoom,\n      message: {\n        userId: localStorage.getItem('userId'),\n        content: value,\n        date: Date.now()\n      },\n      userId: localStorage.getItem('userId')\n    };\n    axios.post('http://localhost:5000/api/conversation/send', {\n      cahtId: currentRoom,\n      chat: value\n    }).then(response => console.log(response)); // if (socket) {\n    //     socket.emit(\"chatroomMessage\", chatMessage);\n    //     setMessage(\"\");\n    // }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, {\n        text\n      });\n    }\n\n    setValue('');\n  };\n\n  const handleUpload = event => {\n    sendMessage(creds, chatId, {\n      files: event.target.files,\n      text: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"message-form\",\n    onSubmit: sendMessage,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"message-input\",\n      placeholder: \"Send a message...\",\n      value: value,\n      onChange: handleChange,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"upload-button\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"image-button\",\n        children: \"picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: false,\n      id: \"upload-button\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleUpload.bind(this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-button\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MessageForm, \"kgt9BMNG7lENW2q0k/jIT7Nxlfk=\", false, function () {\n  return [useSelector];\n});\n\n_c = MessageForm;\nexport default MessageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/chat/MessageForm.jsx"],"names":["useState","useSelector","axios","io","require","connect","isTyping","MessageForm","props","value","setValue","chatId","creds","currentRoom","state","conversations","socket","rejectUnauthorized","handleChange","event","target","emit","name","sendMessage","e","preventDefault","chatMessage","chatroomId","message","userId","localStorage","getItem","content","date","Date","now","post","cahtId","chat","then","response","console","log","handleSubmit","text","trim","length","handleUpload","files","display","bind"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n// import { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nconst io = require('socket.io-client').connect\r\nconst isTyping = () => { }\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n    const { currentRoom } = useSelector(state => state.conversations)\r\n    const socket = io.connect(\"http://localhost:5000\", {\r\n        rejectUnauthorized: false\r\n    });\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        socket.emit('typing', { name: 'getaneh' })\r\n        isTyping(props, chatId);\r\n    };\r\n\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault()\r\n        const chatMessage = {\r\n            chatroomId: currentRoom,\r\n            message: { userId: localStorage.getItem('userId'), content: value, date: Date.now() },\r\n            userId: localStorage.getItem('userId')\r\n        }\r\n        axios.post('http://localhost:5000/api/conversation/send', { cahtId: currentRoom, chat: value }).then(response => console.log(response))\r\n        // if (socket) {\r\n        //     socket.emit(\"chatroomMessage\", chatMessage);\r\n        //     setMessage(\"\");\r\n        // }\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if (text.length > 0) {\r\n            sendMessage(creds, chatId, { text });\r\n        }\r\n\r\n        setValue('');\r\n    };\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    };\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={sendMessage}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    picture\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleUpload.bind(this)}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                send\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MessageForm;"]},"metadata":{},"sourceType":"module"}