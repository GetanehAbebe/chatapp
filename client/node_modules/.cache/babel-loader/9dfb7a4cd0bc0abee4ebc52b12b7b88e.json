{"ast":null,"code":"import io from \"socket.io-client\";\n\nconst {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n  SIGNUP_REQUEST,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  REQUEST\n} = require('../user/types');\n\nconst initialState = {\n  loading: false,\n  user: localStorage.getItem('userId'),\n  error: '',\n  socket: ''\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGIN_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n        error: ''\n      };\n\n    case SIGNUP_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n        error: ''\n      };\n\n    case LOGIN_FAILURE:\n      return {\n        loading: false,\n        user: '',\n        error: action.payload\n      };\n\n    case SIGNUP_FAILURE:\n      return {\n        loading: false,\n        user: '',\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setupSocket = () => {\n  const token = localStorage.getItem(\"token\");\n\n  if (token && !socket) {\n    const newSocket = io(\"http://localhost:5000\", {\n      query: {\n        token: localStorage.getItem(\"token\")\n      }\n    });\n    newSocket.on(\"disconnect\", () => {\n      setSocket(null);\n      setTimeout(setupSocket, 3000);\n      makeToast(\"error\", \"Socket Disconnected!\");\n    });\n    setSocket(newSocket);\n  }\n};\nmodule.exports = reducer;","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/redux/user/reducer.js"],"names":["io","SIGNUP_SUCCESS","SIGNUP_FAILURE","SIGNUP_REQUEST","LOGIN_FAILURE","LOGIN_SUCCESS","REQUEST","require","initialState","loading","user","localStorage","getItem","error","socket","reducer","state","action","type","payload","setupSocket","token","newSocket","query","on","setSocket","setTimeout","makeToast","module","exports"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;;AACA,MAAM;AAAEC,EAAAA,cAAF;AAAkBC,EAAAA,cAAlB;AACFC,EAAAA,cADE;AACcC,EAAAA,aADd;AAC6BC,EAAAA,aAD7B;AAC4CC,EAAAA;AAD5C,IACwDC,OAAO,CAAC,eAAD,CADrE;;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAFW;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAArB;;AAOA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,OAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHP,QAAAA,OAAO,EAAE;AAFN,OAAP;;AAIJ,SAAKJ,aAAL;AACI,aAAO;AACHI,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAFV;AAGHN,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKZ,cAAL;AACI,aAAO;AACHQ,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAEO,MAAM,CAACE,OAFV;AAGHN,QAAAA,KAAK,EAAE;AAHJ,OAAP;;AAKJ,SAAKT,aAAL;AACI,aAAO;AACHK,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHG,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHX,OAAP;;AAMJ,SAAKjB,cAAL;AACI,aAAO;AACHO,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHG,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHX,OAAP;;AAKJ;AAAS,aAAOH,KAAP;AA/Bb;AAiCH,CAlCD;;AAoCA,OAAO,MAAMI,WAAW,GAAG,MAAM;AAC7B,QAAMC,KAAK,GAAGV,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAIS,KAAK,IAAI,CAACP,MAAd,EAAsB;AAClB,UAAMQ,SAAS,GAAGtB,EAAE,CAAC,uBAAD,EAA0B;AAC1CuB,MAAAA,KAAK,EAAE;AACHF,QAAAA,KAAK,EAAEV,YAAY,CAACC,OAAb,CAAqB,OAArB;AADJ;AADmC,KAA1B,CAApB;AAMAU,IAAAA,SAAS,CAACE,EAAV,CAAa,YAAb,EAA2B,MAAM;AAC7BC,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAC,MAAAA,UAAU,CAACN,WAAD,EAAc,IAAd,CAAV;AACAO,MAAAA,SAAS,CAAC,OAAD,EAAU,sBAAV,CAAT;AACH,KAJD;AAMAF,IAAAA,SAAS,CAACH,SAAD,CAAT;AACH;AACJ,CAjBM;AAkBPM,MAAM,CAACC,OAAP,GAAiBd,OAAjB","sourcesContent":["import io from \"socket.io-client\";\r\nconst { SIGNUP_SUCCESS, SIGNUP_FAILURE,\r\n    SIGNUP_REQUEST, LOGIN_FAILURE, LOGIN_SUCCESS, REQUEST } = require('../user/types')\r\nconst initialState = {\r\n    loading: false,\r\n    user: localStorage.getItem('userId'),\r\n    error: '',\r\n    socket: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload,\r\n                error: ''\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                user: action.payload,\r\n                error: ''\r\n            }\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                loading: false,\r\n                user: '',\r\n                error: action.payload\r\n            }\r\n\r\n        case SIGNUP_FAILURE:\r\n            return {\r\n                loading: false,\r\n                user: '',\r\n                error: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setupSocket = () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token && !socket) {\r\n        const newSocket = io(\"http://localhost:5000\", {\r\n            query: {\r\n                token: localStorage.getItem(\"token\"),\r\n            },\r\n        });\r\n\r\n        newSocket.on(\"disconnect\", () => {\r\n            setSocket(null);\r\n            setTimeout(setupSocket, 3000);\r\n            makeToast(\"error\", \"Socket Disconnected!\");\r\n        });\r\n\r\n        setSocket(newSocket);\r\n    }\r\n};\r\nmodule.exports = reducer"]},"metadata":{},"sourceType":"module"}