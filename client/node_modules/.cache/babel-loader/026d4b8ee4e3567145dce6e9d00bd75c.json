{"ast":null,"code":"import axios from 'axios';\n\nconst {\n  SIGNUP_SUCCESS,\n  SIGNUP_FAILURE,\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  REQUEST\n} = require('../user/types');\n\nexport const login = (email, password) => {\n  return async dispatch => {\n    dispatch(request());\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/user/login', {\n        email,\n        password\n      });\n      console.log('async await', response);\n      if (response.data.message) throw response.data.message;\n      dispatch(loginSuccess(response.data));\n      appendToStorage(response.data);\n    } catch (e) {\n      dispatch(loginFailure(e.message));\n    }\n  };\n};\nexport const signup = object => {\n  console.log('form data', object);\n  return async dispatch => {\n    dispatch(request());\n    axios.post('http://localhost:5000/api/user/signup', object).then(response => {\n      dispatch(signupSuccess(response.data));\n      appendToStorage(response.data);\n    }).catch(e => {\n      dispatch(signupFailure(e.message));\n    });\n  };\n};\nexport const request = () => {\n  return {\n    type: REQUEST\n  };\n};\nexport const loginSuccess = users => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: users\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: LOGIN_FAILURE,\n    payload: error\n  };\n};\nexport const signupRequest = () => {\n  return {\n    type: REQUEST\n  };\n};\nexport const signupSuccess = users => {\n  return {\n    type: SIGNUP_SUCCESS,\n    payload: users\n  };\n};\nexport const signupFailure = error => {\n  return {\n    type: SIGNUP_FAILURE,\n    payload: error\n  };\n};\nexport const appendToStorage = user => {\n  localStorage.setItem('user-Details', JSON.stringify(user));\n  localStorage.setItem('userId', user._id);\n  localStorage.setItem('userName', user.firstName);\n  localStorage.setItem('token', user.token);\n  console.log('success');\n  return '';\n};","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/redux/user/actions.js"],"names":["axios","SIGNUP_SUCCESS","SIGNUP_FAILURE","LOGIN_FAILURE","LOGIN_SUCCESS","REQUEST","require","login","email","password","dispatch","request","response","post","console","log","data","message","loginSuccess","appendToStorage","e","loginFailure","signup","object","then","signupSuccess","catch","signupFailure","type","users","payload","error","signupRequest","user","localStorage","setItem","JSON","stringify","_id","firstName","token"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nconst { SIGNUP_SUCCESS, SIGNUP_FAILURE, LOGIN_FAILURE, LOGIN_SUCCESS, REQUEST } = require('../user/types')\r\nexport const login = (email, password) => {\r\n    return async (dispatch) => {\r\n        dispatch(request())\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/user/login', { email, password })\r\n            console.log('async await', response)\r\n\r\n            if (response.data.message) throw response.data.message\r\n            dispatch(loginSuccess(response.data))\r\n            appendToStorage(response.data)\r\n        } catch (e) {\r\n            dispatch(loginFailure(e.message))\r\n\r\n        }\r\n    }\r\n}\r\nexport const signup = (object) => {\r\n    console.log('form data', object)\r\n    return async (dispatch) => {\r\n        dispatch(request())\r\n        axios.post('http://localhost:5000/api/user/signup', object)\r\n            .then(response => {\r\n                dispatch(signupSuccess(response.data))\r\n                appendToStorage(response.data)\r\n            }).catch(e => {\r\n                dispatch(signupFailure(e.message))\r\n            })\r\n    }\r\n}\r\nexport const request = () => {\r\n    return {\r\n        type: REQUEST\r\n    }\r\n}\r\n\r\nexport const loginSuccess = users => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const loginFailure = error => {\r\n    return {\r\n        type: LOGIN_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\nexport const signupRequest = () => {\r\n    return {\r\n        type: REQUEST\r\n    }\r\n}\r\n\r\nexport const signupSuccess = users => {\r\n    return {\r\n        type: SIGNUP_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\nexport const signupFailure = error => {\r\n    return {\r\n        type: SIGNUP_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\nexport const appendToStorage = user => {\r\n    localStorage.setItem('user-Details', JSON.stringify(user))\r\n    localStorage.setItem('userId', user._id)\r\n    localStorage.setItem('userName', user.firstName)\r\n    localStorage.setItem('token', user.token)\r\n    console.log('success')\r\n    return ''\r\n}"]},"metadata":{},"sourceType":"module"}