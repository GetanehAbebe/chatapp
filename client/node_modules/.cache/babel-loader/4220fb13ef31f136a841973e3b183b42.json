{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\chatapp\\\\client\\\\src\\\\pages\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as Yup from 'yup';\nimport { useFormik } from \"formik\";\nimport { connect, useSelector, useDispatch } from 'react-redux';\nimport { login, signup } from '../redux/user/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const {\n    user,\n    error,\n    loading\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const SUPPORTED_FORMATS = [\"jpg\", \"jpeg\", \"gif\", \"png\", \"webp\"];\n  const formik = useFormik({\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      profileImage: \"\"\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(20, 'Must be 15 characters or less').min(3).required('please enter your first name'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').min(3).required('please enter your last name'),\n      email: Yup.string().email('Email is invalid').required('Email is required'),\n      password: Yup.string().min(8, 'Password must be at least 8 charaters').required('Password is required'),\n      confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Password musts match').required('Confirm password is required'),\n      profileImage: Yup.mixed().required(\"You need to provide a file\").test(\"fileFormat\", \"Unsupported Format, valid formats: png,jpeg,gif,jpg\", value => value && SUPPORTED_FORMATS.includes(value.split('.')[1]))\n    }),\n    onSubmit: values => {\n      console.log('values', values);\n      const data = new FormData();\n      data.append(\"userDetails\", JSON.stringify(values));\n      data.append('image', formik.values.profileImage);\n      dispatch(signup(data));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        className: \"form__label\",\n        children: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        className: \"form__input\",\n        placeholder: \"abc@example.com\",\n        onChange: formik.handleChange,\n        value: formik.values.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), formik.touched.firstName && formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.firstName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 72\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"lastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        className: \"form__input\",\n        placeholder: \"abc@example.com\",\n        onChange: formik.handleChange,\n        value: formik.values.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), formik.touched.lastName && formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.lastName, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 70\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        className: \"form__input\",\n        placeholder: \"abc@example.com\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 64\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form__input\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), formik.touched.password && formik.errors.password ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.password, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 70\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirmPassword\",\n        children: \"confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"confirmPassword\",\n        className: \"form__input\",\n        onChange: formik.handleChange,\n        value: formik.values.confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), formik.touched.confirmPassword && formik.errors.confirmPassword ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.confirmPassword, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 84\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profileImage\",\n        children: \"profile Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"profileImage\",\n        className: \"form__input\",\n        onChange: formik.handleChange,\n        value: formik.values.profileImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), formik.touched.profileImage && formik.errors.profileImage ? /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"text-danger\",\n        children: [formik.errors.profileImage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 78\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn--green\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"2JPq0x0GSt90ssrOHDCiIJkXd4c=\", false, function () {\n  return [useSelector, useDispatch, useFormik];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/User/Documents/chatapp/client/src/pages/Register.jsx"],"names":["React","useEffect","useState","Yup","useFormik","connect","useSelector","useDispatch","login","signup","Register","user","error","loading","state","dispatch","SUPPORTED_FORMATS","formik","initialValues","firstName","lastName","email","password","confirmPassword","profileImage","validationSchema","object","string","max","min","required","oneOf","ref","mixed","test","value","includes","split","onSubmit","values","console","log","data","FormData","append","JSON","stringify","handleSubmit","handleChange","touched","errors"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,WAA/B,QAAkD,aAAlD;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,uBAA9B;;;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACH,IAAhB,CAA5C;AACA,QAAMI,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,iBAAiB,GAAG,CACtB,KADsB,EAEtB,MAFsB,EAGtB,KAHsB,EAItB,KAJsB,EAKtB,MALsB,CAA1B;AAQA,QAAMC,MAAM,GAAGb,SAAS,CAAC;AACrBc,IAAAA,aAAa,EAAE;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,eAAe,EAAE,EALN;AAMXC,MAAAA,YAAY,EAAE;AANH,KADM;AASrBC,IAAAA,gBAAgB,EAAEtB,GAAG,CAACuB,MAAJ,CAAW;AACzBP,MAAAA,SAAS,EAAEhB,GAAG,CAACwB,MAAJ,GACNC,GADM,CACF,EADE,EACE,+BADF,EAENC,GAFM,CAEF,CAFE,EAGNC,QAHM,CAGG,8BAHH,CADc;AAKzBV,MAAAA,QAAQ,EAAEjB,GAAG,CAACwB,MAAJ,GACLC,GADK,CACD,EADC,EACG,+BADH,EAELC,GAFK,CAED,CAFC,EAGLC,QAHK,CAGI,6BAHJ,CALe;AASzBT,MAAAA,KAAK,EAAElB,GAAG,CAACwB,MAAJ,GACFN,KADE,CACI,kBADJ,EAEFS,QAFE,CAEO,mBAFP,CATkB;AAYzBR,MAAAA,QAAQ,EAAEnB,GAAG,CAACwB,MAAJ,GACLE,GADK,CACD,CADC,EACE,uCADF,EAELC,QAFK,CAEI,sBAFJ,CAZe;AAezBP,MAAAA,eAAe,EAAEpB,GAAG,CAACwB,MAAJ,GACZI,KADY,CACN,CAAC5B,GAAG,CAAC6B,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CADM,EACuB,sBADvB,EAEZF,QAFY,CAEH,8BAFG,CAfQ;AAkBzBN,MAAAA,YAAY,EAAErB,GAAG,CAAC8B,KAAJ,GAAYH,QAAZ,CAAqB,4BAArB,EAAmDI,IAAnD,CAAwD,YAAxD,EACV,qDADU,EAEVC,KAAK,IAAIA,KAAK,IAAInB,iBAAiB,CAACoB,QAAlB,CAA2BD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAA3B,CAFR;AAlBW,KAAX,CATG;AA+BrBC,IAAAA,QAAQ,EAAGC,MAAD,IAAY;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;AACA,YAAMG,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,MAAAA,IAAI,CAACE,MAAL,CAAY,aAAZ,EAA2BC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAA3B;AACAG,MAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB3B,MAAM,CAACsB,MAAP,CAAcf,YAAnC;AACAT,MAAAA,QAAQ,CAACN,MAAM,CAACiC,IAAD,CAAP,CAAR;AACH;AArCoB,GAAD,CAAxB;AAuCA,sBAAO;AAAA,eACF7B,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADT,eAEH;AAAM,MAAA,QAAQ,EAAEI,MAAM,CAAC8B,YAAvB;AAAqC,MAAA,MAAM,EAAC,MAA5C;AAAA,8BAEQ;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFR,eAGQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,iBAJhB;AAKI,QAAA,QAAQ,EAAE9B,MAAM,CAAC+B,YALrB;AAMI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAcpB;AANzB;AAAA;AAAA;AAAA;AAAA,cAHR,EAWSF,MAAM,CAACgC,OAAP,CAAe9B,SAAf,IAA4BF,MAAM,CAACiC,MAAP,CAAc/B,SAA1C,gBAAsD;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCF,MAAM,CAACiC,MAAP,CAAc/B,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAtD,GAA0H,EAXnI,eAaQ;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbR,eAcQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,iBAJhB;AAKI,QAAA,QAAQ,EAAEF,MAAM,CAAC+B,YALrB;AAMI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAcnB;AANzB;AAAA;AAAA;AAAA;AAAA,cAdR,EAsBSH,MAAM,CAACgC,OAAP,CAAe7B,QAAf,IAA2BH,MAAM,CAACiC,MAAP,CAAc9B,QAAzC,gBAAoD;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCH,MAAM,CAACiC,MAAP,CAAc9B,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAApD,GAAuH,EAtBhI,eAyBQ;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBR,eA0BQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,WAAW,EAAC,iBAJhB;AAKI,QAAA,QAAQ,EAAEH,MAAM,CAAC+B,YALrB;AAMI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAclB;AANzB;AAAA;AAAA;AAAA;AAAA,cA1BR,EAkCSJ,MAAM,CAACgC,OAAP,CAAe5B,KAAf,IAAwBJ,MAAM,CAACiC,MAAP,CAAc7B,KAAtC,gBAA8C;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCJ,MAAM,CAACiC,MAAP,CAAc7B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAA9C,GAA8G,EAlCvH,eAqCQ;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCR,eAsCQ;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,QAAQ,EAAEJ,MAAM,CAAC+B,YAJrB;AAKI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAcjB;AALzB;AAAA;AAAA;AAAA;AAAA,cAtCR,EA6CSL,MAAM,CAACgC,OAAP,CAAe3B,QAAf,IAA2BL,MAAM,CAACiC,MAAP,CAAc5B,QAAzC,gBAAoD;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCL,MAAM,CAACiC,MAAP,CAAc5B,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAApD,GAAuH,EA7ChI,eAgDQ;AAAO,QAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDR,eAiDQ;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,iBAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAKI,QAAA,QAAQ,EAAEL,MAAM,CAAC+B,YALrB;AAMI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAchB;AANzB;AAAA;AAAA;AAAA;AAAA,cAjDR,EAyDSN,MAAM,CAACgC,OAAP,CAAe1B,eAAf,IAAkCN,MAAM,CAACiC,MAAP,CAAc3B,eAAhD,gBAAkE;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCN,MAAM,CAACiC,MAAP,CAAc3B,eAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlE,GAA4I,EAzDrJ,eA4DQ;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5DR,eA6DQ;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,cAFT;AAGI,QAAA,SAAS,EAAC,aAHd;AAII,QAAA,QAAQ,EAAEN,MAAM,CAAC+B,YAJrB;AAKI,QAAA,KAAK,EAAE/B,MAAM,CAACsB,MAAP,CAAcf;AALzB;AAAA;AAAA;AAAA;AAAA,cA7DR,EAoESP,MAAM,CAACgC,OAAP,CAAezB,YAAf,IAA+BP,MAAM,CAACiC,MAAP,CAAc1B,YAA7C,gBAA4D;AAAO,QAAA,SAAS,EAAC,aAAjB;AAAA,mBAAgCP,MAAM,CAACiC,MAAP,CAAc1B,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5D,GAAmI,EApE5I,eAsEI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtEJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA,kBAAP;AAgFH,CAlID;;GAAMd,Q;UAC+BJ,W,EAChBC,W,EASFH,S;;;KAXbM,Q;AAmIN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from 'yup'\r\nimport { useFormik } from \"formik\";\r\nimport { connect, useSelector, useDispatch } from 'react-redux';\r\nimport { login, signup } from '../redux/user/actions'\r\nconst Register = () => {\r\n    const { user, error, loading } = useSelector(state => state.user)\r\n    const dispatch = useDispatch()\r\n    const SUPPORTED_FORMATS = [\r\n        \"jpg\",\r\n        \"jpeg\",\r\n        \"gif\",\r\n        \"png\",\r\n        \"webp\"\r\n    ];\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            profileImage: \"\"\r\n        },\r\n        validationSchema: Yup.object({\r\n            firstName: Yup.string()\r\n                .max(20, 'Must be 15 characters or less')\r\n                .min(3)\r\n                .required('please enter your first name'),\r\n            lastName: Yup.string()\r\n                .max(20, 'Must be 20 characters or less')\r\n                .min(3)\r\n                .required('please enter your last name'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .min(8, 'Password must be at least 8 charaters')\r\n                .required('Password is required'),\r\n            confirmPassword: Yup.string()\r\n                .oneOf([Yup.ref('password'), null], 'Password musts match')\r\n                .required('Confirm password is required'),\r\n            profileImage: Yup.mixed().required(\"You need to provide a file\").test(\"fileFormat\",\r\n                \"Unsupported Format, valid formats: png,jpeg,gif,jpg\",\r\n                value => value && SUPPORTED_FORMATS.includes(value.split('.')[1])),\r\n        }),\r\n        onSubmit: (values) => {\r\n            console.log('values', values)\r\n            const data = new FormData();\r\n            data.append(\"userDetails\", JSON.stringify(values))\r\n            data.append('image', formik.values.profileImage)\r\n            dispatch(signup(data))\r\n        },\r\n    })\r\n    return <>\r\n        {loading && <p>loading</p>}\r\n        <form onSubmit={formik.handleSubmit} method=\"POST\">\r\n          \r\n                <label htmlFor=\"firstName\" className='form__label'>firstName</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    className='form__input'\r\n                    placeholder=\"abc@example.com\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstName}\r\n                />\r\n                {formik.touched.firstName && formik.errors.firstName ? <small className='text-danger'>{formik.errors.firstName} </small> : \"\"}\r\n\r\n                <label htmlFor=\"lastName\" >lastName</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    className='form__input'\r\n                    placeholder=\"abc@example.com\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastName}\r\n                />\r\n                {formik.touched.lastName && formik.errors.lastName ? <small className='text-danger'>{formik.errors.lastName} </small> : \"\"}\r\n          \r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className='form__input'\r\n                    placeholder=\"abc@example.com\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                />\r\n                {formik.touched.email && formik.errors.email ? <small className='text-danger'>{formik.errors.email} </small> : \"\"}\r\n           \r\n            \r\n                <label htmlFor=\"password\">Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className='form__input'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                />\r\n                {formik.touched.password && formik.errors.password ? <small className='text-danger'>{formik.errors.password} </small> : \"\"}\r\n           \r\n           \r\n                <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n                <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    className='form__input'\r\n                  \r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmPassword}\r\n                />\r\n                {formik.touched.confirmPassword && formik.errors.confirmPassword ? <small className='text-danger'>{formik.errors.confirmPassword} </small> : \"\"}\r\n   \r\n          \r\n                <label htmlFor=\"profileImage\">profile Image</label>\r\n                <input\r\n                    type=\"file\"\r\n                    name=\"profileImage\"\r\n                    className='form__input'\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.profileImage}\r\n                />\r\n                {formik.touched.profileImage && formik.errors.profileImage ? <small className='text-danger'>{formik.errors.profileImage} </small> : \"\"}\r\n           \r\n            <button type=\"submit\" className=\"btn btn--green\">submit</button>\r\n        </form>\r\n    </>\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default Register"]},"metadata":{},"sourceType":"module"}